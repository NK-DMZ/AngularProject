{"ast":null,"code":"import _asyncToGenerator from \"D:/Project/AngularBasis/angularTransPDF/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nconst html2canvas = window.html2canvas;\nimport jspdf from \"jspdf\";\n/**\r\n *  @param title pdf文件名\r\n *  @param elId 打印的节点ID\r\n */\n\nfunction htmlToPdf() {\n  return _htmlToPdf.apply(this, arguments);\n}\n/**\r\n *  @param elId 打印的节点ID\r\n */\n\n\nfunction _htmlToPdf() {\n  _htmlToPdf = _asyncToGenerator(function* (title = \"文件\", elId) {\n    if (!elId) {\n      console.error(\"导出节点不存在！\");\n      return;\n    } //将html dom节点生成canvas\n\n\n    let htmlCanvas = yield getCanvasByHtmlId(elId); // 将canvas对象转为pdf\n\n    let pdf = canvasToPdf(htmlCanvas); // 通过浏览器下载pdf\n\n    downPdf(pdf, title);\n  });\n  return _htmlToPdf.apply(this, arguments);\n}\n\nfunction getCanvasByHtmlId(_x) {\n  return _getCanvasByHtmlId.apply(this, arguments);\n}\n/**\r\n *  @param htmlCanvas canvas对象\r\n */\n\n\nfunction _getCanvasByHtmlId() {\n  _getCanvasByHtmlId = _asyncToGenerator(function* (elId) {\n    let canvas = yield html2canvas(document.getElementById(elId), {\n      scale: 2,\n      useCORS: true,\n      allowTaint: true,\n      taintTest: false,\n      imageTimeout: 0\n    }).then(canvas => {\n      return canvas;\n    });\n    return canvas;\n  });\n  return _getCanvasByHtmlId.apply(this, arguments);\n}\n\nfunction canvasToPdf(htmlCanvas) {\n  let canvasWidth = htmlCanvas.width;\n  let canvasHeight = htmlCanvas.height;\n  let imgBase64 = htmlCanvas.toDataURL(\"image/jpeg\", 1.0); //a4纸的尺寸[595.28,841.89]，html页面生成的canvas在pdf中图片的宽高\n\n  let imgWidth = 595.28; //图片高度需要等比缩放\n\n  let imgHeight = 595.28 / canvasWidth * canvasHeight;\n  let pageHeight = imgHeight; //pdf转化后页面总高度\n\n  let position = 0;\n  let pdfInstance = new jspdf(\"landscape\", \"pt\", \"a4\");\n  pdfInstance.setFontSize(12);\n\n  if (imgHeight < 841.89) {\n    pdfInstance.addImage(imgBase64, \"JPEG\", 0, 0, imgWidth, imgHeight);\n  } else {\n    while (pageHeight > 0) {\n      pdfInstance.addImage(imgBase64, \"JPEG\", 0, position, imgWidth, imgHeight);\n      pageHeight -= 841.89;\n      position -= 841.89;\n\n      if (pageHeight > 0) {\n        pdfInstance.addPage();\n      }\n    }\n  }\n\n  return pdfInstance;\n}\n\nfunction downPdf(pdfInstance, title) {\n  // 文件名过长导致下载失败\n  if (title.length > 50) {\n    title = title.substring(title.length - 50);\n  }\n\n  pdfInstance.save(title + \".pdf\", {\n    returnPromise: true\n  }).then(function () {\n    //搜狗浏览器下载机制问题暂时不关闭\n    if (!(navigator.userAgent.toLowerCase().indexOf(\"se 2.x\") > -1)) {\n      setTimeout(window.close, 300);\n    }\n  });\n}\n\nexport default htmlToPdf;","map":{"version":3,"sources":["D:\\Project\\AngularBasis\\angularTransPDF\\src\\app\\print.ts"],"names":[],"mappings":";AAAA,MAAM,WAAW,GAAI,MAAc,CAAC,WAApC;AACA,OAAQ,KAAR,MAAoB,OAApB;AAEA;;;AAGG;;SACY,S;;;AAcf;;AAEG;;;;iCAhBH,WAAyB,KAAK,GAAG,IAAjC,EAAuC,IAAvC,EAA+C;IAC7C,IAAI,CAAC,IAAL,EAAW;MACT,OAAO,CAAC,KAAR,CAAc,UAAd;MACA;IACD,CAJ4C,CAM7C;;;IACA,IAAI,UAAU,SAAS,iBAAiB,CAAC,IAAD,CAAxC,CAP6C,CAQ7C;;IACA,IAAI,GAAG,GAAG,WAAW,CAAC,UAAD,CAArB,CAT6C,CAU7C;;IACA,OAAO,CAAC,GAAD,EAAM,KAAN,CAAP;EACD,C;;;;SAKc,iB;;;AAcf;;AAEG;;;;yCAhBH,WAAiC,IAAjC,EAAyC;IACvC,IAAI,MAAM,SAAS,WAAW,CAAC,QAAQ,CAAC,cAAT,CAAwB,IAAxB,CAAD,EAAgC;MAC5D,KAAK,EAAE,CADqD;MAE5D,OAAO,EAAE,IAFmD;MAG5D,UAAU,EAAE,IAHgD;MAI5D,SAAS,EAAE,KAJiD;MAK5D,YAAY,EAAE;IAL8C,CAAhC,CAAX,CAMhB,IANgB,CAMV,MAAD,IAAe;MACrB,OAAO,MAAP;IACD,CARkB,CAAnB;IAUA,OAAO,MAAP;EACD,C;;;;AAKD,SAAS,WAAT,CAAqB,UAArB,EAAmC;EACjC,IAAI,WAAW,GAAG,UAAU,CAAC,KAA7B;EACA,IAAI,YAAY,GAAG,UAAU,CAAC,MAA9B;EACA,IAAI,SAAS,GAAG,UAAU,CAAC,SAAX,CAAqB,YAArB,EAAmC,GAAnC,CAAhB,CAHiC,CAKjC;;EACA,IAAI,QAAQ,GAAG,MAAf,CANiC,CAOjC;;EACA,IAAI,SAAS,GAAG,SAAS,WAAT,GAAuB,YAAvC;EAEA,IAAI,UAAU,GAAG,SAAjB,CAViC,CAUL;;EAC5B,IAAI,QAAQ,GAAG,CAAf;EAEA,IAAI,WAAW,GAAG,IAAI,KAAJ,CAAW,WAAX,EAAyB,IAAzB,EAA+B,IAA/B,CAAlB;EACA,WAAW,CAAC,WAAZ,CAAwB,EAAxB;;EAEA,IAAI,SAAS,GAAG,MAAhB,EAAwB;IACtB,WAAW,CAAC,QAAZ,CAAqB,SAArB,EAAgC,MAAhC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,QAA9C,EAAwD,SAAxD;EACD,CAFD,MAEO;IACL,OAAO,UAAU,GAAG,CAApB,EAAuB;MACrB,WAAW,CAAC,QAAZ,CAAqB,SAArB,EAAgC,MAAhC,EAAwC,CAAxC,EAA2C,QAA3C,EAAqD,QAArD,EAA+D,SAA/D;MACA,UAAU,IAAI,MAAd;MACA,QAAQ,IAAI,MAAZ;;MACA,IAAI,UAAU,GAAG,CAAjB,EAAoB;QAClB,WAAW,CAAC,OAAZ;MACD;IACF;EACF;;EAED,OAAO,WAAP;AACD;;AAED,SAAS,OAAT,CAAiB,WAAjB,EAAkC,KAAlC,EAA2C;EACzC;EACA,IAAI,KAAK,CAAC,MAAN,GAAe,EAAnB,EAAuB;IACrB,KAAK,GAAG,KAAK,CAAC,SAAN,CAAgB,KAAK,CAAC,MAAN,GAAe,EAA/B,CAAR;EACD;;EAED,WAAW,CAAC,IAAZ,CAAiB,KAAK,GAAG,MAAzB,EAAiC;IAAE,aAAa,EAAE;EAAjB,CAAjC,EAA0D,IAA1D,CAA+D,YAAA;IAC7D;IACA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,WAApB,GAAkC,OAAlC,CAA0C,QAA1C,IAAsD,CAAC,CAAzD,CAAJ,EAAiE;MAC/D,UAAU,CAAC,MAAM,CAAC,KAAR,EAAe,GAAf,CAAV;IACD;EACF,CALD;AAMD;;AAED,eAAe,SAAf","sourcesContent":["const html2canvas = (window as any).html2canvas;\r\nimport  jspdf  from \"jspdf\";\r\n\r\n/**\r\n *  @param title pdf文件名\r\n *  @param elId 打印的节点ID\r\n */\r\nasync function htmlToPdf(title = \"文件\", elId:any) {\r\n  if (!elId) {\r\n    console.error(\"导出节点不存在！\");\r\n    return;\r\n  }\r\n\r\n  //将html dom节点生成canvas\r\n  let htmlCanvas = await getCanvasByHtmlId(elId);\r\n  // 将canvas对象转为pdf\r\n  let pdf = canvasToPdf(htmlCanvas);\r\n  // 通过浏览器下载pdf\r\n  downPdf(pdf, title);\r\n}\r\n\r\n/**\r\n *  @param elId 打印的节点ID\r\n */\r\nasync function getCanvasByHtmlId(elId:any) {\r\n  let canvas = await html2canvas(document.getElementById(elId), {\r\n    scale: 2,\r\n    useCORS: true,\r\n    allowTaint: true,\r\n    taintTest: false,\r\n    imageTimeout: 0\r\n  }).then((canvas:any) => {\r\n    return canvas;\r\n  });\r\n\r\n  return canvas;\r\n}\r\n\r\n/**\r\n *  @param htmlCanvas canvas对象\r\n */\r\nfunction canvasToPdf(htmlCanvas:any) {\r\n  let canvasWidth = htmlCanvas.width;\r\n  let canvasHeight = htmlCanvas.height;\r\n  let imgBase64 = htmlCanvas.toDataURL(\"image/jpeg\", 1.0);\r\n\r\n  //a4纸的尺寸[595.28,841.89]，html页面生成的canvas在pdf中图片的宽高\r\n  let imgWidth = 595.28;\r\n  //图片高度需要等比缩放\r\n  let imgHeight = 595.28 / canvasWidth * canvasHeight;\r\n\r\n  let pageHeight = imgHeight; //pdf转化后页面总高度\r\n  let position = 0;\r\n\r\n  let pdfInstance = new jspdf( \"landscape\" , \"pt\", \"a4\");\r\n  pdfInstance.setFontSize(12);\r\n\r\n  if (imgHeight < 841.89) {\r\n    pdfInstance.addImage(imgBase64, \"JPEG\", 0, 0, imgWidth, imgHeight);\r\n  } else {\r\n    while (pageHeight > 0) {\r\n      pdfInstance.addImage(imgBase64, \"JPEG\", 0, position, imgWidth, imgHeight);\r\n      pageHeight -= 841.89;\r\n      position -= 841.89;\r\n      if (pageHeight > 0) {\r\n        pdfInstance.addPage();\r\n      }\r\n    }\r\n  }\r\n\r\n  return pdfInstance;\r\n}\r\n\r\nfunction downPdf(pdfInstance:any, title:any) {\r\n  // 文件名过长导致下载失败\r\n  if (title.length > 50) {\r\n    title = title.substring(title.length - 50);\r\n  }\r\n\r\n  pdfInstance.save(title + \".pdf\", { returnPromise: true }).then(function() {\r\n    //搜狗浏览器下载机制问题暂时不关闭\r\n    if (!(navigator.userAgent.toLowerCase().indexOf(\"se 2.x\") > -1)) {\r\n      setTimeout(window.close, 300);\r\n    }\r\n  });\r\n}\r\n\r\nexport default htmlToPdf;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}